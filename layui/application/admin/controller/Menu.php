<?php

namespace app\admin\controller;

use app\common\controller\AdminBase;
use app\common\model\AuthRule;
use think\Controller;

class Menu extends AdminBase
{

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $admin_list = AuthRule::order(['sort'=>'desc','id'=>'asc'])->select();
        $admin_level_list = array2level($admin_list);

        $this->assign(compact('admin_level_list'));

    }


    /**
     * 后台菜单
     * @return \think\response\View
     */
    public function index()
    {

        return view();
    }


    /**
     * 添加菜单
     * @return \think\response\View
     */
    public function addMenu($pid='')
    {
        return view('',compact('pid'));
    }


    /**
     * 保存菜单
     */
    public function save()
    {
        if ($this->request->isPost()) {

            $data = $this->request->post();

            $val_res = $this->validate($data, "AuthRuleValidate");
            if ($val_res !== true) {
                $this->error($val_res);
            }

            $res = AuthRule::create($data);
            $res ? $this->success('添加成功！') : $this->error('添加失败！');
        }
    }


    /**
     * 更新菜单
     * @param $id
     * @return \think\response\View
     */
    public function edit($id)
    {

        if($this->request->isPost()){
            $data = $this->request->post();
            $val_res = $this->validate($data,'AuthRuleValidate');
            if($val_res !== true){
                $this->error($val_res);
            }

            $res = AuthRule::update($data);
            $res ? $this->success('更新成功！') : $this->error('更新失败！');
        }

        $info = AuthRule::find($id);
        return view('',compact('info'));
    }


    /**
     * 删除菜单
     * @param $id
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function delete($id)
    {

        $sub_menu = AuthRule::where(['pid'=>$id])->find();
        if($sub_menu){
            $this->error('该菜单下有子菜单，不能删除！');
        }

        $res = AuthRule::destroy($id);
        $res ? $this->success('删除成功！') : $this->error('删除失败！');
    }

}
